version: 2.0

_run:
  - install-dependencies: &install-dependencies
      name: Install software-properties-common
      command: 'sudo apt-get install -y software-properties-common'
  - update-repository-toolchain: &update-repository-toolchain
      name: Update Repository Tool Chain
      command: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main"
        sudo apt update
  - install-gcc-7: &install-gcc-7
      name: Install GCC-7
      command: |
        sudo apt install g++-7 -y
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 60
  - install-valgrind: &install-valgrind
      name: Install Valgrind
      command: |
        sudo apt-get install valgrind -y
  - install-clang-8: &install-clang-8
      name: Install Clang-8
      command: |
        sudo apt install clang-8 libc++-8-dev libc++abi-8-dev -y
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 60
        sudo update-alternatives --config clang++
  - premake: &premake
      name: Download and install Premake5
      command: |
        wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha13/premake-5.0.0-alpha13-linux.tar.gz
        tar -xvf premake-5.0.0-alpha13-linux.tar.gz

jobs:
  gcc:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: *install-dependencies
      - run: *update-repository-toolchain
      - run: *install-gcc-7
      - run: *premake
      - run:
          name: Creating Build Files
          command: './premake5 --cc=gcc gmake'
      - run:
          name: Build and Run Unit Tests
          command: './build.sh --verbose'
      - run:
          name: Run System Tests, Debug
          command: ./bin/debug/ChocAn_debug -i tests/system_tests.txt --compact-output --in-memory
      - run:
          name: Run System Tests, Release
          command: ./bin/release/ChocAn_release -i tests/system_tests.txt --compact-output --in-memory
      - run:
          name: Run System Tests, Leaks
          command: valgrind --leak-check=yes ./bin/debug/ChocAn_debug -i test/system_test.txt --compact-output --in-memory
      - run:
          name: Upload code coverage
          command: 'bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect reports" '
  clang:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: *install-dependencies
      - run: *update-repository-toolchain
      - run: *install-clang-8
      - run: *premake
      - run:
          name: Creating Build Files
          command: './premake5 --cc=clang gmake'
      - run:
          name: Build and run
          command: './build.sh --verbose --clang'

workflows:
  version: 2
  build:
    jobs:
      - gcc
      - clang
